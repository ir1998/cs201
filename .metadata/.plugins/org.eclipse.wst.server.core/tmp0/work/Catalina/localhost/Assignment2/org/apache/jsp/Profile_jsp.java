/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M15
 * Generated at: 2017-02-12 22:58:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import data.User;
import data.Event;
import java.util.List;
import java.util.Set;

public final class Profile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("data.Event");
    _jspx_imports_classes.add("data.User");
    _jspx_imports_classes.add("java.util.Set");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<link rel=\"stylesheet\" href=\"main.css\">\n");
      out.write("</head>\n");
      out.write("<body bgcolor=\"#E6E6FA\">\n");
      out.write("<h1 id=\"Title1\" >Cinemate</h1>\n");
      out.write("<form method=\"GET\" action=\"MainMenu.jsp\" >\n");
      out.write("\t<div id=\"ButtonHolder\">\n");
      out.write("\t\t<input id=\"MyButton\" type=\"submit\" value=\"Return to Main Menu\">\n");
      out.write("\t</div>\n");
      out.write("</form>\n");
      out.write("<br>\n");
      out.write("<div id=\"imageBox\">\n");
      out.write("\t<img id=\"circleImage\" src=");
out.print(((User)(session.getAttribute("user"))).getImage());
      out.write(">\n");
      out.write("</div>\n");
      out.write("<h2 id=\"Title5\">");
out.print(((User)(session.getAttribute("user"))).getName());
      out.write("</h2>\n");
      out.write("<h2 id=\"Title5\">@");
out.print(session.getAttribute("username"));
      out.write("</h2>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div id=\"column\">\n");
      out.write("    <div id=\"leftColumn\">\n");
      out.write("        ");
 Set<String> followers = (Set<String>)((User)(session.getAttribute("user"))).getFollowers();
      out.write("\n");
      out.write("\t\t<div id=\"ResultsBox\">\n");
      out.write("\t\t\t");
for(String f: followers){ 
      out.write("\n");
      out.write("\t\t\t\t<h3 id=\"Results\">");
out.print(f); 
      out.write("</h3>\n");
      out.write("\t\t\t");
} 
      out.write("\n");
      out.write("\t\t</div>\n");
      out.write("    </div>\n");
      out.write("    <div id=\"rightColumn\">\n");
      out.write("        ");
 Set<String> following = (Set<String>)((User)(session.getAttribute("user"))).getFollowing();
      out.write("\n");
      out.write("\t\t<div id=\"ResultsBox\">\n");
      out.write("\t\t\t");
for(String f: following){ 
      out.write("\n");
      out.write("\t\t\t\t<h3 id=\"Results\">");
out.print(f); 
      out.write("</h3>\n");
      out.write("\t\t\t");
} 
      out.write("\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
