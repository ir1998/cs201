/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M15
 * Generated at: 2017-03-06 00:49:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Set;
import data.User;
import data.Movie;
import data.StringConstants;

public final class search_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Set");
    _jspx_imports_classes.add("data.User");
    _jspx_imports_classes.add("data.StringConstants");
    _jspx_imports_classes.add("data.Movie");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("\n");

	//get the search parameter passed through the href
	String searchParam = (String) request.getParameter(StringConstants.SEARCH_PARAM);
	//the string we will display in the page description
	String toDisplay = searchParam;
	//if the search parameter is not null, we know we came from the href, and we should set the search type
	//as an attribute of the session
	if (searchParam != null) {
		session.setAttribute(StringConstants.SEARCH, searchParam);
	}
	//if the search parameter is null, we know we came from the servlet, and not the href
	//so we know that the search type has been stored in the session, and we need to display that instead
	else{
		toDisplay = (String) session.getAttribute(StringConstants.SEARCH);
	}
	//get the boolean of whether the search is for users or movies
	Boolean isUserSearch = (Boolean) request.getAttribute(StringConstants.IS_USER_SEARCH);
	//if the boolean is null, we don't have results because we must have come from the href
	//if the boolean is not null, we came from the servlet so we must have results (even if there are 0 results)
	Boolean haveResults = (isUserSearch != null);

      out.write("\n");
      out.write("<head>\n");
      out.write("\t<title>Search</title>\n");
      out.write("\t<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/main.css\">\n");
      out.write("\t<link rel=\"stylesheet\" href= \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/search.css\">\n");
      out.write("\n");
      out.write("\t<link href=\"https://fonts.googleapis.com/css?family=Lato:700i\" rel=\"stylesheet\">\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"../bootstrap-3.3.7-dist/*\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div>\n");
      out.write("\t\t<ul>\n");
      out.write("\t\t\t<li><a data-toggle=\"tooltip\" title=\"Feed\" href=\"feed.jsp\">Feed</a></li>\n");
      out.write("\t\t\t<li><a data-toggle=\"tooltip\" title=\"Profile\" href=\"profile.jsp\">Profile</a></li>\n");
      out.write("\t\t\t<li style=\"border-right:none;\">\n");
      out.write("\t\t\t\t<form action = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.print( StringConstants.SEARCH_SERVLET);
      out.write("\">\n");
      out.write("                            <div class=\"input-group\" id=");
      out.print( StringConstants.SEARCH );
      out.write("  style=\"width: 100%\">\n");
      out.write("                                <input style = \"width: 40%; margin-left:20px; margin-top:8px;\" type=\"text\" size = \"40\" name=\"");
      out.print( StringConstants.SEARCH_PARAM );
      out.write("\">\n");
      out.write("\t\t\t\t\t\t\t\t<select data-toggle=\"tooltip\" title=\"Select search type\" style=\"width:15%;\" name=\"selectSearch\">\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"movies\">Movies</option>\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"users\">Users</option>\n");
      out.write("\t\t\t\t\t\t\t\t</select>\n");
      out.write("\t\t\t\t\t\t\t\t<input data-toggle=\"tooltip\" title=\"Search\" style = \"width: 15%; margin-left: 5px;\" type=\"submit\" value=\"Search\">\n");
      out.write("                            </div>\n");
      out.write("                        </form>\n");
      out.write("\t\t\t</li>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<li data-toggle=\"tooltip\" title=\"Exit and choose new file\" style=\"float:right\"><a href=\"file_chooser.jsp\">Exit</a></li>\n");
      out.write("\t\t\t<li data-toggle=\"tooltip\" title=\"Logout\" style=\"border-right: 1px solid #bbb; float:right\"><a href=\"login.jsp\">Logout</a></li>\n");
      out.write("\t\t</ul>\n");
      out.write("\t</div>\n");
      out.write("\t<div id = \"title_container\">\n");
      out.write("\t\tCinemate\n");
      out.write("\t</div>\n");
      out.write("\n");
      out.write("\t<div id = \"welcome_text\">\n");
      out.write("\t\tYou searched for \"");
      out.print( toDisplay );
      out.write("\"\n");
      out.write("\t</div>\n");
      out.write("\n");
      out.write("\t<div id = \"outer_container\">\n");
      out.write("\t\t<div id = \"inner_container\">\n");
      out.write("\t\t\t");
      out.write("\n");
      out.write("\n");
      out.write("\t\t\t<br>\n");
      out.write("\t\t\t<div id = \"search\">\n");
      out.write("\t\t\t\t<table>\n");
      out.write("\t\t\t\t\t<thead >\n");
      out.write("\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t<td>Search Results</td>\n");
      out.write("\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t</thead>\n");
      out.write("\t\t\t\t\t\t<tbody>\n");
      out.write("\t\t\t\t\t\t<!-- if we have results -->\n");
      out.write("\t\t\t\t\t\t\t");
 if (haveResults){ 
      out.write("\n");
      out.write("\t\t\t\t\t\t\t<!-- if it was a user search, we know the results will be a set of Users -->\n");
      out.write("\t\t\t\t\t\t\t\t");
 if (isUserSearch){
									Set<User> results = (Set<User>)request.getAttribute(StringConstants.RESULTS);
								
									for (User result : results){ 
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<tr><td><a data-toggle=\"tooltip\" title=\"Visit profile\" href=\"jsp/profile.jsp?profileView=");
      out.print( result.getUsername());
      out.write("\"  >");
      out.print( result.getUsername());
      out.write("</a></td></tr>\n");
      out.write("\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t\t");
 } 
								}
							/* otherwise we know the results will be a set of Movies */
								else{
								
									Set<Movie> results = (Set<Movie>)request.getAttribute(StringConstants.RESULTS);
								
									if (results != null){
									
										for (Movie result : results){ 
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<tr><td><a data-toggle=\"tooltip\" title=\"See movie info\" href = \"jsp/movie_page.jsp?movieView=");
      out.print( result.getTitle());
      out.write('"');
      out.write('>');
      out.print( result.getTitle());
      out.write("</a></td></tr>\n");
      out.write("\t\t\t\t\t\t\t\t\t");
 } 
									}
								} 
      out.write("\n");
      out.write("\t\t\t\t\t\t");
 } 
      out.write("\n");
      out.write("\t\t\t\t\t</tbody>\n");
      out.write("\t\t\t\t</table>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
