/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M15
 * Generated at: 2017-04-19 14:51:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import data.Client;
import data.User;

public final class profile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("data.User");
    _jspx_imports_classes.add("data.Client");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("\n");
      out.write("\n");
      out.write("<html lang=\"en\" >\n");
      out.write("<head>\n");
      out.write("\t<meta charset=\"UTF-8\">\n");
      out.write("\t<title>fortune - gamify investing</title>\n");
      out.write("\t<link rel=\"stylesheet\" href=\"http://ajax.googleapis.com/ajax/libs/angular_material/1.1.0/angular-material.min.css\">\n");
      out.write("\t<link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"mdstyle.css\">\n");
      out.write("</head>\n");
      out.write("<!-- <<<<<<< HEAD>>>>>>> cca088bc82a1e4c35490880ec325d7322fa83d84 -->\n");
 Client local = (Client) request.getSession().getAttribute("client");
      out.write('\n');
      out.write('\n');
 User currentUser = (User) local.getUser();
      out.write('\n');
 String username = currentUser.getUsername();
System.out.println(username);
String password = currentUser.getPassword();
String email = currentUser.getEmail();
String fname = currentUser.getFname();
String lname = currentUser.getLname();
double balance = currentUser.getBalance(); 
      out.write("\n");
      out.write("<body ng-app=\"InvestCS\" ng-cloak class=\"grad\">\n");
      out.write("\t<div layout=\"column\" ng-controller=\"mainPageController\" id=\"grad\">\n");
      out.write("\t\t<md-sidenav md-component-id=\"left\" class=\"md-sidenav-left\">\n");
      out.write("\t\t<md-list>\n");
      out.write("\t\t\t<md-list-item>\n");
      out.write("\t\t\t\t<md-button class=\"nav-item\" href=\"mainPage.jsp\">\n");
      out.write("\t\t\t\t\t<h3>Main Page</h3>\n");
      out.write("\t\t\t\t</md-button>\n");
      out.write("\t\t\t</md-list-item>\n");
      out.write("\t\t\t<md-list-item>\n");
      out.write("\t\t\t\t<md-button class=\"nav-item\" href=\"history.jsp\">\n");
      out.write("\t\t\t\t\t<h3>History</h3>\n");
      out.write("\t\t\t\t</md-button>\n");
      out.write("\t\t\t</md-list-item>\n");
      out.write("\t\t\t<md-list-item>\n");
      out.write("\t\t\t\t<md-button class=\"nav-item\" href=\"profile.jsp\">\n");
      out.write("\t\t\t\t\t<h3>Profile</h3>\n");
      out.write("\t\t\t\t</md-button>\n");
      out.write("\t\t\t</md-list-item>\n");
      out.write("\t\t</md-list>\n");
      out.write("\t\t</md-sidenav>\n");
      out.write("\t\t<md-toolbar class=\"siteToolbar\">\n");
      out.write("\t\t\t<div class=\"md-toolbar-tools\">\n");
      out.write("\t\t\t\t<md-button class=\"siteButton\" ng-click=\"openLeftMenu()\">\n");
      out.write("\t\t\t\t\t<md-icon ng-bind=\"'menu'\"></md-icon>\n");
      out.write("\t\t\t\t</md-button>\n");
      out.write("\t\t\t\t<h2 align=\"center\" flex md-truncate>fortune - gamify investing</h2>\n");
      out.write("\t\t\t\t<md-button class=\"siteButton\" href=\"profile.jsp\">\n");
      out.write("\t\t\t\t\t<md-icon ng-bind=\"'person'\"></md-icon>\n");
      out.write("\t\t\t\t\tProfile\n");
      out.write("\t\t\t\t</md-button>\n");
      out.write("\t\t\t\t<md-button class=\"siteButton\" href=\"login.jsp\">\n");
      out.write("\t\t\t\t\t<md-icon ng-bind=\"'exit_to_app'\"></md-icon>\n");
      out.write("\t\t\t\t\tLogout\n");
      out.write("\t\t\t\t</md-button>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t\n");
      out.write("\t\t</md-toolbar>\n");
      out.write("\t\t<md-content>\n");
      out.write("\t\t\t<div class=\"grad\" layout=\"column\">\n");
      out.write("\t\t\t\t<div layout=\"column\">\n");
      out.write("\t\t\t\t\t<h1>User Profile Details</h1>\n");
      out.write("\t\t\t\t\t<table class=\"userDetails\" ng-controller=\"mainPageController\">\n");
      out.write("\t\t\t\t\t<script type=\"text/javascript\">\n");
      out.write("\t\t\t\t\t\tupdateUserData = function($scope){\n");
      out.write("\t\t\t\t\t\t\tvar firstname = document.getElementById(\"firstName\").value;\n");
      out.write("\t\t\t\t\t\t\tvar lastname = document.getElementById(\"lastName\").value;\n");
      out.write("\t\t\t\t\t\t\tvar email = document.getElementById(\"email\").value;\n");
      out.write("\t\t\t\t\t\t\tvar password = document.getElementById(\"password\").value;\n");
      out.write("\t\t\t\t\t\t\tvar xhttp = new XMLHttpRequest();\n");
      out.write("\t\t\t\t\t\t\txhttp.open(\"GET\",\n");
      out.write("\t\t\t\t\t\t\t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/ProfileUpdateServlet?firstname=\" +\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tfirstname + \n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\"&lastname=\" + lastname + \n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\"&email=\" + email + \n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\"&password=\" + password,\n");
      out.write("\t\t\t\t\t\t\t\t\tfalse);\n");
      out.write("\t\t\t\t\t\t\txhttp.send();\n");
      out.write("\t\t\t\t\t\t\treturn true;\n");
      out.write("\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t};\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t</script>\n");
      out.write("\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t<td>\n");
      out.write("\t\t\t\t\t\t\t\t<h3>First Name:</h3>\n");
      out.write("\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t\t<td>\n");
      out.write("\t\t\t\t\t\t\t\t<h3>");
      out.print(local.user.getFname() );
      out.write("</h3>\n");
      out.write("\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t\t<td>\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" id=\"firstName\" ng-model=\"userData.firstName\" name=\"firstName\">\n");
      out.write("\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t<td>\n");
      out.write("\t\t\t\t\t\t\t\t<h3>Last Name:</h3>\n");
      out.write("\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t\t<td>\n");
      out.write("\t\t\t\t\t\t\t\t<h3>");
      out.print(local.user.getLname() );
      out.write("</h3>\n");
      out.write("\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t\t<td>\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" id=\"lastName\" ng-model=\"userData.lastName\" name=\"lastName\">\n");
      out.write("\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t<td>\n");
      out.write("\t\t\t\t\t\t\t\t<h3>Email:</h3>\n");
      out.write("\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t\t<td>\n");
      out.write("\t\t\t\t\t\t\t\t<h3>");
      out.print(local.user.getEmail() );
      out.write("</h3>\n");
      out.write("\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t\t<td>\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" id=\"email\" ng-model=\"userData.email\" name=\"email\">\n");
      out.write("\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t<td>\n");
      out.write("\t\t\t\t\t\t\t\t<h3>Password:</h3>\n");
      out.write("\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t\t<td>\n");
      out.write("\t\t\t\t\t\t\t\t<h3>");
      out.print(local.user.getPassword() );
      out.write("</h3>\n");
      out.write("\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t\t<td>\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" id=\"password\" name=\"password\">\n");
      out.write("\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t<td>\n");
      out.write("\t\t\t\t\t\t\t\t<h3>Username:</h3>\n");
      out.write("\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t\t<td>\n");
      out.write("\t\t\t\t\t\t\t\t<h3>");
      out.print(local.user.getUsername() );
      out.write("</h3>\n");
      out.write("\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t\t<td>\n");
      out.write("\t\t\t\t\t\t\t\t<p ng-model=\"userData.username\" name=\"balance\">{{userData.username}}</p>\n");
      out.write("\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t<td>\n");
      out.write("\t\t\t\t\t\t\t\t<h3>Balance:</h3>\n");
      out.write("\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t\t<td>\n");
      out.write("\t\t\t\t\t\t\t\t<h3>$");
      out.print(local.user.getBalance() );
      out.write("</h3>\n");
      out.write("\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t\t<td>\n");
      out.write("\t\t\t\t\t\t\t\t<p ng-model=\"userData.balance\" name=\"balance\">{{userData.balance}}</p>\n");
      out.write("\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t<td>\n");
      out.write("\t\t\t\t\t\t\t\t<form action=\"profile.jsp\" method=\"GET\" onsubmit=\"return updateUserData();\">\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type=\"submit\" value=\"Update Info\" name=\"username\">\n");
      out.write("\t\t\t\t\t\t\t\t</form>\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t</table>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</md-content>\n");
      out.write("\t</div>\t\n");
      out.write("\t\n");
      out.write("\n");
      out.write("\t<!-- Angular Material requires Angular.js Libraries -->\n");
      out.write("\t<script src=\"http://ajax.googleapis.com/ajax/libs/angularjs/1.5.5/angular.min.js\"></script>\n");
      out.write("\t<script src=\"http://ajax.googleapis.com/ajax/libs/angularjs/1.5.5/angular-animate.min.js\"></script>\n");
      out.write("\t<script src=\"http://ajax.googleapis.com/ajax/libs/angularjs/1.5.5/angular-aria.min.js\"></script>\n");
      out.write("\t<script src=\"http://ajax.googleapis.com/ajax/libs/angularjs/1.5.5/angular-messages.min.js\"></script>\n");
      out.write("\n");
      out.write("\t<!-- Angular Material Library -->\n");
      out.write("\t<script src=\"http://ajax.googleapis.com/ajax/libs/angular_material/1.1.0/angular-material.min.js\"></script>\n");
      out.write("\n");
      out.write("\t<!-- Your application bootstrap  -->\n");
      out.write("\t<script type=\"text/javascript\" src=\"app.js\"></script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
