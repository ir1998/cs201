package movieMedia;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

public class xmlParser {
	ArrayList<String> genres = new ArrayList<String>();
	ArrayList<String> actions = new ArrayList<String>();
	ArrayList<Movie> movies = new ArrayList<Movie>();
	Map<String, ArrayList<User>> users = new HashMap<String, ArrayList<User>>();

	public xmlParser(String iFile) {
		try {
			File inFile = new File(iFile);

			DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
			DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
			Document doc = dBuilder.parse(inFile);
			doc.getDocumentElement().normalize();

			NodeList genreList = doc.getElementsByTagName("genres");
			if (genreList.item(0).getNodeType() == Node.ELEMENT_NODE) {
				for (int i = 0; i < genreList.getLength(); i++) {
					Node nNode = genreList.item(i);
					if (nNode.getNodeType() == Node.ELEMENT_NODE) {
						Element eElement = (Element) nNode;
						NodeList allGenres = eElement.getElementsByTagName("genre");
						for (int j = 0; j < allGenres.getLength(); j++) {
							Node mNode = allGenres.item(j);
							if (mNode.getNodeType() == Node.ELEMENT_NODE) {
								Element genre = (Element) mNode;
								System.out.println("genre is " + genre.getTextContent());
								genres.add(genre.getTextContent());
							}
						}
					}
				}
			}

			NodeList actionList = doc.getElementsByTagName("actions");
			Node currentAction = actionList.item(0);
			if (currentAction.getNodeType() == Node.ELEMENT_NODE) {
				Element eElement = (Element) currentAction;
				NodeList allActions = eElement.getElementsByTagName("action");
				for (int j = 0; j < allActions.getLength(); j++) {
					Node mNode = allActions.item(j);
					if (mNode.getNodeType() == Node.ELEMENT_NODE) {
						Element action = (Element) mNode;
						System.out.println("action is " + action.getTextContent());
						actions.add(action.getTextContent());
					}
				}

			}

			NodeList movieList = doc.getElementsByTagName("movies");
			Node moviesNode = movieList.item(0);
			if (moviesNode.getNodeType() == Node.ELEMENT_NODE) {
				NodeList allMovies = ((Element) moviesNode).getElementsByTagName("movie");
				for (int i = 0; i < allMovies.getLength(); i++) {
					Movie nMovie = new Movie();
					Node currentNode = allMovies.item(i);
					if (currentNode.getNodeType() == Node.ELEMENT_NODE) {
						Element movieElement = (Element) currentNode;

						NodeList titleList = movieElement.getElementsByTagName("title");
						System.out.println("title is " + titleList.item(0).getTextContent());
						nMovie.setTitle(titleList.item(0).getTextContent());

						NodeList directorList = movieElement.getElementsByTagName("director");
						System.out.println("director is " + directorList.item(0).getTextContent());
						nMovie.setDirector(directorList.item(0).getTextContent());

						NodeList writersList = movieElement.getElementsByTagName("writers");
						for (int j = 0; j < writersList.getLength(); j++) {
							Node writersNode = writersList.item(j);
							if (writersNode.getNodeType() == Node.ELEMENT_NODE) {
								Element writersElement = (Element) writersNode;
								NodeList writerList = writersElement.getElementsByTagName("writer");
								for (int k = 0; k < writerList.getLength(); k++) {
									Node writer = writerList.item(k);
									System.out.println("writer is " + writer.getTextContent());
									nMovie.addWriter(writer.getTextContent());
								}
							}
						}

						NodeList actorsList = movieElement.getElementsByTagName("actors");
						for (int j = 0; j < actorsList.getLength(); j++) {
							Node actorsNode = actorsList.item(j);
							if (actorsNode.getNodeType() == Node.ELEMENT_NODE) {
								Element actorsElement = (Element) actorsNode;
								NodeList actorList = actorsElement.getElementsByTagName("actor");
								for (int k = 0; k < actorList.getLength(); k++) {
									Node actor = actorList.item(k);
									System.out.println("actor is " + actor.getTextContent());
									nMovie.addActor(actor.getTextContent());
								}
							}
						}

						NodeList yearList = movieElement.getElementsByTagName("year");
						System.out.println("year is " + yearList.item(0).getTextContent());
						nMovie.setYear(yearList.item(0).getTextContent());

						NodeList genreL = movieElement.getElementsByTagName("genre");
						System.out.println("genre is " + genreL.item(0).getTextContent());
						nMovie.setGenre(genreL.item(0).getTextContent());

						NodeList descList = movieElement.getElementsByTagName("description");
						System.out.println("description is " + descList.item(0).getTextContent());
						nMovie.setDescription(descList.item(0).getTextContent());

						NodeList ratingList = movieElement.getElementsByTagName("rating");
						System.out.println("rating is " + ratingList.item(0).getTextContent());
						if (ratingList.item(0).getTextContent() != "") {
							nMovie.setRating(ratingList.item(0).getTextContent());
						}
					}
					movies.add(nMovie);
				}

				NodeList usersList = doc.getElementsByTagName("users");
				Node usersNode = usersList.item(0);
				if (usersNode.getNodeType() == Node.ELEMENT_NODE) {
					NodeList userList = doc.getElementsByTagName("user");
					for (int i = 0; i < userList.getLength(); i++) {
						Node currentNode = userList.item(i);
						User nUser = new User();
						if (currentNode.getNodeType() == Node.ELEMENT_NODE) {
							Element userElement = (Element) currentNode;
							NodeList uNameList = userElement.getElementsByTagName("username");
							System.out.println("first username is " + uNameList.item(0).getTextContent());
							nUser.setUsername(uNameList.item(0).getTextContent());

							NodeList fNameList = userElement.getElementsByTagName("fname");
							System.out.println("first name " + fNameList.item(0).getTextContent());
							nUser.setFName(fNameList.item(0).getTextContent());

							NodeList lNameList = userElement.getElementsByTagName("lname");
							System.out.println("last name " + lNameList.item(0).getTextContent());
							nUser.setLName(lNameList.item(0).getTextContent());

							NodeList pwList = userElement.getElementsByTagName("password");
							System.out.println("password is " + pwList.item(0).getTextContent());
							nUser.setPassword(pwList.item(0).getTextContent());

							NodeList followersList = userElement.getElementsByTagName("following");
							Node followerNode = followersList.item(0);
							if (followerNode.getNodeType() == Node.ELEMENT_NODE) {
								Element followerElement = (Element) followerNode;
								NodeList followList = followerElement.getElementsByTagName("username");
								for (int j = 0; j < followList.getLength(); j++) {
									nUser.addFollower(followList.item(j).getTextContent());
									System.out.println("follower is " + followList.item(j).getTextContent());
								}
							}

							NodeList eventsList = userElement.getElementsByTagName("feed");
							Node eventsNode = eventsList.item(0);
							if (eventsNode.getNodeType() == Node.ELEMENT_NODE) {
								Element eventsElement = (Element) eventsNode;
								NodeList eventList = eventsElement.getElementsByTagName("event");
								for (int j = 0; j < eventList.getLength(); j++) {
									Node eventNode = eventList.item(j);
									if (eventNode.getNodeType() == Node.ELEMENT_NODE) {
										Element eElement = (Element) eventNode;
										NodeList eventAction = eElement.getElementsByTagName("action");

										NodeList eventMovie = eElement.getElementsByTagName("movie");

										NodeList eventRating = eElement.getElementsByTagName("rating");

										nUser.addEvent(eventAction.item(0).getTextContent(),
												eventMovie.item(0).getTextContent(),
												eventRating.item(0).getTextContent());
										System.out.println("eAction is " + eventAction.item(0).getTextContent());
										System.out.println("eMovie is " + eventMovie.item(0).getTextContent());
										System.out.println("eRating is " + eventRating.item(0).getTextContent());

									}
								}
							}
							// if username case insensitive already exists, add
							// to existing list
							if (users.containsKey(uNameList.item(0).getTextContent().toLowerCase())) {
								ArrayList<User> temp = users.get(uNameList.item(0).getTextContent().toLowerCase());
								temp.add(nUser);
								users.put(uNameList.item(0).getTextContent().toLowerCase(), temp);
							} else { // if no case insensitive username exists,
										// create list and add
								ArrayList<User> nUserList = new ArrayList<User>();
								nUserList.add(nUser);
								users.put(uNameList.item(0).getTextContent().toLowerCase(), nUserList);
							}
						}
					}
				}

			}
			for (ArrayList<User> itUserList : users.values()) {
				System.out.println("line 215");
				for (User currUser : itUserList) {
					System.out.println("line 217");
					ArrayList<String> buffFollowers = currUser.getFollowing();
					for (String followedUser : buffFollowers) {
						System.out.println("line 220");
						ArrayList<User> userFollowList = users.get(followedUser.toLowerCase());
						for (User fUser : userFollowList) {
							if (fUser.getUsername() == followedUser) {
								fUser.addFollower(currUser.getUsername());
								System.out.println(currUser.getUsername());
							}
						}
					}
				}
			}

		} catch (ParserConfigurationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SAXException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {

		}
	}
}
